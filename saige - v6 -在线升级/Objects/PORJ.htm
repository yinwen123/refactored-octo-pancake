<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\PORJ.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\PORJ.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Oct 28 17:04:36 2024
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; nfc_loop &rArr; pcd_coll &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[e]">ATIM_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[19]">AWT_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[12]">BTIM1_IRQHandler</a> from music.o(i.BTIM1_IRQHandler) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[13]">BTIM2_IRQHandler</a> from main.o(i.BTIM2_IRQHandler) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[14]">BTIM3_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[8]">FLASHRAM_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[a]">GPIOA_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[b]">GPIOB_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[c]">GPIOC_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[11]">GTIM_IRQHandler</a> from tim.o(i.GTIM_IRQHandler) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[15]">I2C_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[16]">SPI_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[9]">SYSCTRL_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[1b]">SystemInit</a> from main.o(i.SystemInit) referenced from startup_cw32f003.o(.text)
 <LI><a href="#[17]">UART1_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[18]">UART2_IRQHandler</a> from usart485.o(i.UART2_IRQHandler) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[f]">VC1_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[10]">VC2_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[6]">WDT_IRQHandler</a> from startup_cw32f003.o(.text) referenced from startup_cw32f003.o(RESET)
 <LI><a href="#[1c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cw32f003.o(.text)
 <LI><a href="#[1a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[89]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[8c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[8d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>ATIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>AWT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>BTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASHRAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SYSCTRL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>VC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>VC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cw32f003.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia2_data
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia1_data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_voltage
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_speed
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mileage
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_deal
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_add
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cout
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startDisplay
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_cartoon
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_check
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_card
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_wblock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_rblock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_coll
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;password
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_card
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[22]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[41]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[94]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[95]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[96]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[97]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[23]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[2c]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2b]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[99]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>BTIM1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, music.o(i.BTIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BTIM1_IRQHandler &rArr; music_isr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>BTIM2_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, main.o(i.BTIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BTIM2_IRQHandler &rArr; adc_check &rArr; flash_adc_updata &rArr; flash_write_word
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quake_check
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_task_50us
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alm_send
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>CRC16_MODBUS</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, usart485.o(i.CRC16_MODBUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertUint8
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvertUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_deal
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_ack
</UL>

<P><STRONG><a name="[4b]"></a>Decoder_data</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, com.o(i.Decoder_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Decoder_data
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_task_50us
</UL>

<P><STRONG><a name="[3d]"></a>GPIO_Init</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, cw32f003_gpio.o(i.GPIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_INIT
</UL>

<P><STRONG><a name="[65]"></a>GTIM_INIT</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, tim.o(i.GTIM_INIT))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11]"></a>GTIM_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tim.o(i.GTIM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>InvertUint16</STRONG> (Thumb, 52 bytes, Stack size 28 bytes, usart485.o(i.InvertUint16))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = InvertUint16
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>

<P><STRONG><a name="[3a]"></a>InvertUint8</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, usart485.o(i.InvertUint8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InvertUint8
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>

<P><STRONG><a name="[1b]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, main.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>UART2_INIT</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, usart485.o(i.UART2_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = UART2_INIT &rArr; USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>UART2_IRQHandler</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, usart485.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recve_485
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f003.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART_Init</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, cw32f003_uart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_INIT
</UL>

<P><STRONG><a name="[32]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[47]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, adc.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_isr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_check
</UL>

<P><STRONG><a name="[9c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[43]"></a>acc_check</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, key.o(i.acc_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = acc_check
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_task_10ms
</UL>

<P><STRONG><a name="[35]"></a>adc_check</STRONG> (Thumb, 766 bytes, Stack size 24 bytes, adc.o(i.adc_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = adc_check &rArr; flash_adc_updata &rArr; flash_write_word
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_adc_updata
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM2_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>adc_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc.o(i.adc_init))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>alm_cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nfc522.o(i.alm_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[38]"></a>alm_send</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, nfc522.o(i.alm_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = alm_send
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM2_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>car_stat_updata</STRONG> (Thumb, 260 bytes, Stack size 20 bytes, main.o(i.car_stat_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = car_stat_updata
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>chage_pwm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tim.o(i.chage_pwm))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>check_buf_word4</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, nfc522.o(i.check_buf_word4))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[7f]"></a>checkbak_id</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, nfc522.o(i.checkbak_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = checkbak_id
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[48]"></a>clr_mask</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, nfc522.o(i.clr_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = clr_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_card
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_coll
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_card
</UL>

<P><STRONG><a name="[36]"></a>com_task_50us</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, com.o(i.com_task_50us))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = com_task_50us &rArr; Decoder_data
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speedope
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decoder_data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_odo_updata
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM2_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>find_card</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, nfc522.o(i.find_card))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = find_card &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[46]"></a>flash_adc_updata</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, flash.o(i.flash_adc_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = flash_adc_updata &rArr; flash_write_word
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_word
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_check
</UL>

<P><STRONG><a name="[52]"></a>flash_earse</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash.o(i.flash_earse))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_user_updata
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_odo_updata
</UL>

<P><STRONG><a name="[61]"></a>flash_init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, flash.o(i.flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>flash_odo_updata</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, flash.o(i.flash_odo_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_odo_updata &rArr; flash_write_word
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_word
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_earse
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_deal
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_task_50us
</UL>

<P><STRONG><a name="[53]"></a>flash_user_updata</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, flash.o(i.flash_user_updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_user_updata &rArr; flash_write_word
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_word
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_earse
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[51]"></a>flash_write_word</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, flash.o(i.flash_write_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flash_write_word
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_user_updata
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_odo_updata
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_adc_updata
</UL>

<P><STRONG><a name="[84]"></a>get_crc</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, nfc522.o(i.get_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_card
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_wblock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_rblock
</UL>

<P><STRONG><a name="[54]"></a>gpio_init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, port.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_init &rArr; gpio_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>gpio_mode</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, port.o(i.gpio_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_afinit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[56]"></a>i2c2_send</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, led.o(i.i2c2_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
</UL>

<P><STRONG><a name="[58]"></a>i2c2_start</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, led.o(i.i2c2_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c2_start
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
</UL>

<P><STRONG><a name="[59]"></a>i2c2_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, led.o(i.i2c2_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c2_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
</UL>

<P><STRONG><a name="[5a]"></a>i2c_send</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, led.o(i.i2c_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = i2c_send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
</UL>

<P><STRONG><a name="[5b]"></a>i2c_start</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, led.o(i.i2c_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_start
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
</UL>

<P><STRONG><a name="[5c]"></a>i2c_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, led.o(i.i2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
</UL>

<P><STRONG><a name="[5d]"></a>key_task_10ms</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, key.o(i.key_task_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = key_task_10ms &rArr; led_check
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_check
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>lc_add</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, com.o(i.lc_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lc_add &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>led_check</STRONG> (Thumb, 238 bytes, Stack size 20 bytes, key.o(i.led_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = led_check
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_task_10ms
</UL>

<P><STRONG><a name="[60]"></a>led_step</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, led.o(i.led_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = led_step &rArr; i2c_send
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c2_stop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c2_start
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 1308 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; nfc_loop &rArr; pcd_coll &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_dis
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia2_data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_voltage
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_speed
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mileage
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_gear
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_card
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_deal
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_level_display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_step
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc_add
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_task_10ms
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chage_pwm
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_INIT
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_INIT
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_cout
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startDisplay
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_Rmod
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_cartoon
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;car_stat_updata
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[77]"></a>modbus_ack</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usart485.o(i.modbus_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = modbus_ack &rArr; CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_deal
</UL>

<P><STRONG><a name="[78]"></a>music_end</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, music.o(i.music_end))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_isr
</UL>

<P><STRONG><a name="[34]"></a>music_isr</STRONG> (Thumb, 1092 bytes, Stack size 20 bytes, music.o(i.music_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = music_isr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_end
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>nfc_afinit</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, port.o(i.nfc_afinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nfc_afinit &rArr; gpio_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[74]"></a>nfc_loop</STRONG> (Thumb, 490 bytes, Stack size 48 bytes, nfc522.o(i.nfc_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = nfc_loop &rArr; pcd_coll &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mode
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_afinit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_user_updata
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_card
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_wblock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_reset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_rblock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_coll
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;password
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_card
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkbak_id
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_buf_word4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alm_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>password</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, nfc522.o(i.password))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = password &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[50]"></a>pcd_cmd</STRONG> (Thumb, 286 bytes, Stack size 36 bytes, nfc522.o(i.pcd_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_read
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_card
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_wblock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_rblock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_coll
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;password
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_card
</UL>

<P><STRONG><a name="[7b]"></a>pcd_coll</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, nfc522.o(i.pcd_coll))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pcd_coll &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[80]"></a>pcd_rblock</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, nfc522.o(i.pcd_rblock))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pcd_rblock &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[49]"></a>pcd_read</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, nfc522.o(i.pcd_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_mask
</UL>

<P><STRONG><a name="[7a]"></a>pcd_reset</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, nfc522.o(i.pcd_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pcd_reset &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[7e]"></a>pcd_wblock</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, nfc522.o(i.pcd_wblock))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pcd_wblock &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[4a]"></a>pcd_write</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, nfc522.o(i.pcd_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pcd_write &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sel_card
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_wblock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_reset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_rblock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_coll
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;password
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_card
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_mask
</UL>

<P><STRONG><a name="[6d]"></a>power_level_display</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, led.o(i.power_level_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = power_level_display
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>quake_check</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, key.o(i.quake_check))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM2_IRQHandler
</UL>

<P><STRONG><a name="[76]"></a>recv_deal</STRONG> (Thumb, 562 bytes, Stack size 24 bytes, usart485.o(i.recv_deal))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = recv_deal &rArr; modbus_ack &rArr; CRC16_MODBUS &rArr; InvertUint16
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_odo_updata
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modbus_ack
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_MODBUS
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>recve_485</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usart485.o(i.recve_485))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>run_cartoon</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, main.o(i.run_cartoon))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = run_cartoon &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>sel_card</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, nfc522.o(i.sel_card))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sel_card &rArr; pcd_cmd &rArr; set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[83]"></a>set_mask</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, nfc522.o(i.set_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = set_mask &rArr; pcd_read &rArr; spi_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_reset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_coll
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_cmd
</UL>

<P><STRONG><a name="[44]"></a>set_mode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nfc522.o(i.set_mode))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_check
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nfc_loop
</UL>

<P><STRONG><a name="[6b]"></a>show_Rmod</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main.o(i.show_Rmod))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>show_card</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, led.o(i.show_card))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = show_card
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>show_gear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, led.o(i.show_gear))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>show_mileage</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, led.o(i.show_mileage))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = show_mileage &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>show_speed</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, led.o(i.show_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = show_speed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>show_voltage</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, led.o(i.show_voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = show_voltage &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>show_zuoxia1_data</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, led.o(i.show_zuoxia1_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = show_zuoxia1_data &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_dis
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
</UL>

<P><STRONG><a name="[71]"></a>show_zuoxia2_data</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, led.o(i.show_zuoxia2_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = show_zuoxia2_data &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_dis
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cout
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>speedope</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, com.o(i.speedope))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_task_50us
</UL>

<P><STRONG><a name="[85]"></a>spi_send</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, nfc522.o(i.spi_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = spi_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_write
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcd_read
</UL>

<P><STRONG><a name="[66]"></a>startDisplay</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, main.o(i.startDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = startDisplay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>start_cout</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, main.o(i.start_cout))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = start_cout &rArr; show_mileage &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia2_data
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia1_data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_voltage
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_speed
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mileage
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_gear
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_level_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>tim_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tim.o(i.tim_init))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>time_cout</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(i.time_cout))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = time_cout &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>time_dis</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, led.o(i.time_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = time_dis &rArr; show_zuoxia2_data &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia2_data
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_zuoxia1_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>udelay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, led.o(i.udelay))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c2_stop
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c2_start
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c2_send
</UL>

<P><STRONG><a name="[63]"></a>wdt_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.wdt_init))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
